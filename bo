# API Gateway HTTP principal
resource "aws_apigatewayv2_api" "this" {
  name          = "${var.name_prefix}-api"
  protocol_type = "HTTP"
  description   = "API Gateway exposing cats-web and cats-backend via VPC Link"
  tags          = var.common_tags
}

# === Routes pour catsweb ===
resource "aws_apigatewayv2_route" "catsweb" {
  api_id    = aws_apigatewayv2_api.this.id
  route_key = "ANY /catsweb/{proxy+}"
  target    = "integrations/${aws_apigatewayv2_integration.catsweb.id}"
}

# === Integration pour catsweb ===
resource "aws_apigatewayv2_integration" "catsweb" {
  api_id               = aws_apigatewayv2_api.this.id
  integration_type     = "HTTP_PROXY"
  integration_uri      = var.catsweb_tg_arn
  integration_method   = "ANY"
  connection_type      = "VPC_LINK"
  connection_id        = var.vpc_link_id
  payload_format_version = "1.0"
}

# === Routes pour catsbackend ===
resource "aws_apigatewayv2_route" "catsbackend" {
  api_id    = aws_apigatewayv2_api.this.id
  route_key = "ANY /catsbackend/{proxy+}"
  target    = "integrations/${aws_apigatewayv2_integration.catsbackend.id}"
}

# === Integration pour catsbackend ===
resource "aws_apigatewayv2_integration" "catsbackend" {
  api_id               = aws_apigatewayv2_api.this.id
  integration_type     = "HTTP_PROXY"
  integration_uri      = var.catsbackend_tg_arn
  integration_method   = "ANY"
  connection_type      = "VPC_LINK"
  connection_id        = var.vpc_link_id
  payload_format_version = "1.0"
}

# DÃ©ploiement et stage
resource "aws_apigatewayv2_stage" "default" {
  api_id      = aws_apigatewayv2_api.this.id
  name        = "$default"
  auto_deploy = true
  
  access_log_settings {
    destination_arn = aws_cloudwatch_log_group.api_gw.arn
    format          = jsonencode({
      requestId         = "$context.requestId"
      ip                = "$context.identity.sourceIp"
      requestTime       = "$context.requestTime"
      httpMethod        = "$context.httpMethod"
      routeKey          = "$context.routeKey"
      status            = "$context.status"
      protocol          = "$context.protocol"
      responseLength    = "$context.responseLength"
      integrationError  = "$context.integrationErrorMessage"
    })
  }
}

# Log group pour API Gateway
resource "aws_cloudwatch_log_group" "api_gw" {
  name              = "/aws/api_gw/${aws_apigatewayv2_api.this.name}"
  retention_in_days = 30
}
