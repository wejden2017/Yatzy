# locals.tf
locals {
  swagger_apps = {
    catsweb    = 8080
    catsbackend = 8081
    concorde   = 9001
  }
}

# target_groups.tf
resource "aws_lb_target_group" "tg_apps" {
  for_each = local.swagger_apps

  name        = "${var.entity}-${var.application}-${var.environment}-${each.key}-tg"
  port        = each.value
  protocol    = "TCP"
  vpc_id      = var.vpc_id
  target_type = "instance"
  tags        = var.tags

  health_check {
    protocol            = "TCP"
    interval            = 30
    timeout             = 5
    healthy_threshold   = 3
    unhealthy_threshold = 3
  }
}

resource "aws_lb_target_group_attachment" "tg_attach_apps" {
  for_each = local.swagger_apps

  target_group_arn = aws_lb_target_group.tg_apps[each.key].arn
  target_id        = var.services_instance_id
  port             = each.value

  lifecycle {
    ignore_changes = [target_id]
  }
}

# listeners.tf
resource "aws_lb_listener" "apps_listeners" {
  for_each = local.swagger_apps

  load_balancer_arn = aws_lb.nlb_cats.arn
  port              = each.value
  protocol          = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.tg_apps[each.key].arn
  }
}

