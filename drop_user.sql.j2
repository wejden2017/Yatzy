-- ================================================
-- Drop user (idempotent) â€“ kills sessions first
-- Env: {{ lookup('env','ENV') | upper }}
-- User: {{ item.login | upper }}
-- ================================================

SET SERVEROUTPUT ON SIZE UNLIMITED
SET FEEDBACK OFF
SET VERIFY OFF
SET HEADING OFF
SET ECHO OFF
WHENEVER SQLERROR EXIT SQL.SQLCODE

DECLARE
  v_user    VARCHAR2(128) := UPPER('{{ item.login }}');
  v_exists  NUMBER := 0;
BEGIN
  -- 1) User exists?
  SELECT COUNT(*)
    INTO v_exists
    FROM dba_users
   WHERE username = v_user;

  IF v_exists = 0 THEN
    DBMS_OUTPUT.PUT_LINE('User '||v_user||' does not exist; nothing to drop.');
    RETURN;
  END IF;

  DBMS_OUTPUT.PUT_LINE('User '||v_user||' exists; searching sessions to kill...');

  -- 2) Kill all sessions for that user (RAC-aware attempt, then fallback)
  FOR s IN (
    SELECT sid, serial#, inst_id
      FROM gv$session
     WHERE username = v_user
       AND type <> 'BACKGROUND'
  )
  LOOP
    BEGIN
      DBMS_OUTPUT.PUT_LINE('Killing session '||s.sid||','||s.serial#||' @' || s.inst_id);
      EXECUTE IMMEDIATE
        'ALTER SYSTEM KILL SESSION '''||s.sid||','||s.serial#||'@'||s.inst_id||''' IMMEDIATE';
    EXCEPTION
      WHEN OTHERS THEN
        -- Fallback (single-instance / non-RAC) using DISCONNECT SESSION
        BEGIN
          EXECUTE IMMEDIATE
            'ALTER SYSTEM DISCONNECT SESSION '''||s.sid||','||s.serial#||''' IMMEDIATE';
        EXCEPTION
          WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Could not kill session '||s.sid||','||s.serial#||' : '||SQLERRM);
        END;
    END;
  END LOOP;

  -- tiny wait to release possible locks
  BEGIN DBMS_LOCK.SLEEP(1); EXCEPTION WHEN OTHERS THEN NULL; END;

  -- 3) Drop the user
  DBMS_OUTPUT.PUT_LINE('Dropping user '||v_user||' CASCADE ...');
  EXECUTE IMMEDIATE 'DROP USER '||v_user||' CASCADE';
  DBMS_OUTPUT.PUT_LINE('User '||v_user||' dropped.');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR dropping '||v_user||' : '||SQLERRM);
    RAISE;
END;
/
