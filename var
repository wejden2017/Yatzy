### Voici les modifications à faire pour rendre tes ports dynamiques selon l'environnement ###

#######################################
# 1. FILE: modules/api_gateway_rest/variables.tf
#######################################

variable "exposed_services" {
  description = "Map of exposed services and their corresponding ports"
  type        = map(number)
}

#######################################
# 2. FILE: modules/api_gateway_rest/main.tf
#######################################

resource "aws_api_gateway_resource" "app" {
  for_each    = var.exposed_services
  rest_api_id = aws_api_gateway_rest_api.this.id
  parent_id   = aws_api_gateway_rest_api.this.root_resource_id
  path_part   = each.key
}

resource "aws_api_gateway_resource" "proxy" {
  for_each    = var.exposed_services
  rest_api_id = aws_api_gateway_rest_api.this.id
  parent_id   = aws_api_gateway_resource.app[each.key].id
  path_part   = "{proxy+}"
}

resource "aws_api_gateway_method" "app" {
  for_each      = var.exposed_services
  rest_api_id   = aws_api_gateway_rest_api.this.id
  resource_id   = aws_api_gateway_resource.proxy[each.key].id
  http_method   = "ANY"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "app" {
  for_each                = var.exposed_services
  rest_api_id             = aws_api_gateway_rest_api.this.id
  resource_id             = aws_api_gateway_resource.proxy[each.key].id
  http_method             = aws_api_gateway_method.app[each.key].http_method
  integration_http_method = "ANY"
  type                    = "HTTP_PROXY"
  uri                     = "http://${var.nlb_dns_name}:${each.value}/{proxy}"
  connection_type         = "VPC_LINK"
  connection_id           = var.vpc_link_id
  passthrough_behavior    = "WHEN_NO_MATCH"
}

#######################################
# 3. FILE: environments/dev.tfvars
#######################################

exposed_services = {
  catsweb       = 8080
  catsbackend   = 8081
  concorde      = 9001
  natop-manager = 9002
  swift         = 9003
}

app_targets = {
  catsweb       = "i-front-dev-id"
  catsbackend   = "i-front-dev-id"
  concorde      = "i-services-dev-id"
  natop-manager = "i-services-dev-id"
  swift         = "i-services-dev-id"
}

#######################################
# 4. FILE: environments/poc.tfvars
#######################################

exposed_services = {
  catsweb       = 18080
  catsbackend   = 18081
  concorde      = 19001
  natop-manager = 19002
  swift         = 19003
}

app_targets = {
  catsweb       = "i-front-poc-id"
  catsbackend   = "i-front-poc-id"
  concorde      = "i-services-poc-id"
  natop-manager = "i-services-poc-id"
  swift         = "i-services-poc-id"
}

#######################################
# 5. FILE: main.tf (racine du projet)
#######################################

module "api_gateway_rest" {
  source            = "./modules/api_gateway_rest"
  exposed_services  = var.exposed_services
  vpc_link_id       = module.vpc_link.id
  nlb_dns_name      = module.nlb.dns_name
  # autres variables...
}

module "nlb" {
  source           = "./modules/nlb"
  exposed_services = var.exposed_services
  app_targets      = var.app_targets
  # autres variables...
}

#######################################
# 6. SUPPRIMER: modules/api_gateway_rest/locals.tf s'il contient exposed_services
#######################################
# Supprimer le bloc suivant s'il existe :
# locals {
#   exposed_services = {...}
# }

#######################################
# 7. FILE: modules/nlb/variables.tf
#######################################

variable "exposed_services" {
  description = "Mapping des services exposés et ports"
  type        = map(number)
}

variable "app_targets" {
  description = "Mapping app_name → instance_id EC2 cible"
  type        = map(string)
}

#######################################
# 8. FILE: modules/nlb/main.tf (ajout)
#######################################

resource "aws_lb_target_group_attachment" "tg_attach_all_apps" {
  for_each         = var.exposed_services
  target_group_arn = aws_lb_target_group.tg_all_apps[each.key].arn
  target_id        = var.app_targets[each.key]
  port             = each.value
}
