# 1) Log de diagnostic pour voir d'oÃ¹ vient la valeur et son type
- name: Debug raw environment sources
  debug:
    msg: |
      env (extra vars) = {{ env | default('UNDEF') }}  [type={{ env | type_debug }}]
      ENV (process env) = {{ lookup('env','ENV') | default('UNDEF') }}
      hostvars[inventory_hostname].environment = {{ hostvars[inventory_hostname].environment | default('UNDEF') }}

# 2) Normaliser une 'environment' propre : string non vide, sinon fallback
- name: Normalize environment
  set_fact:
    environment: >-
      {%- set cli = (env if (env is defined and env is string and env|length > 0) else '') -%}
      {%- set ci  = lookup('env','ENV') | default('', true) -%}
      {%- set hv  = hostvars[inventory_hostname].environment | default('', true) -%}
      {{ (cli or ci or hv or 'dev') | string | lower }}

# 3) Valider la valeur
- name: Validate environment
  assert:
    that:
      - environment in ['dev','qa','uat']
    fail_msg: >-
      Unknown environment '{{ environment }}'. Expected one of: dev, qa, uat.
      Sources => cli={{ env | default('UNDEF') }} ({{ env | type_debug }}),
                 ENV={{ lookup('env','ENV') | default('UNDEF') }},
                 hostvars={{ hostvars[inventory_hostname].environment | default('UNDEF') }}.
