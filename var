SELECT
  SYS_CONTEXT('USERENV','SESSION_USER')   AS session_user,
  SYS_CONTEXT('USERENV','CURRENT_USER')   AS current_user,
  SYS_CONTEXT('USERENV','PROXY_USER')     AS proxy_user;

SELECT username, account_status, default_tablespace, temporary_tablespace
FROM dba_users
ORDER BY username;


-- a) permettre à LUCA1..LUCA6 de se connecter (utile pour le proxy)
GRANT CREATE SESSION TO LUCA1;
GRANT CREATE SESSION TO LUCA2;
GRANT CREATE SESSION TO LUCA3;
GRANT CREATE SESSION TO LUCA4;
GRANT CREATE SESSION TO LUCA5;
GRANT CREATE SESSION TO LUCA6;

-- b) droits de création dans LEUR schéma
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA1;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA2;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA3;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA4;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA5;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE TO LUCA6;

-- c) quotas sur les TBS applicatifs (pas SYSTEM/SYSAUX/UNDO/TEMP/DBA_TOOLS)
ALTER USER LUCA6 QUOTA UNLIMITED ON BATCH;
ALTER USER LUCA6 QUOTA UNLIMITED ON CATS_DATA;
ALTER USER LUCA6 QUOTA UNLIMITED ON CATS_IDX;
ALTER USER LUCA6 QUOTA UNLIMITED ON IAM_DATA;
ALTER USER LUCA6 QUOTA UNLIMITED ON IAM_IDX;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_DATA_ARCH;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_DATA_JOUR;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_DATA_REF;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_IDX_ARCH;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_IDX_JOUR;
ALTER USER LUCA6 QUOTA UNLIMITED ON TBS_IDX_REF;
ALTER USER LUCA6 QUOTA UNLIMITED ON USERS;



test :



-- doit créer sans erreur (sinon quota manquant → ORA-01536)
CREATE TABLE T_OK (id NUMBER) TABLESPACE CATS_DATA;

CREATE OR REPLACE VIEW V_OK AS SELECT 1 AS x FROM dual;

-- (optionnel) un petit package
CREATE OR REPLACE PACKAGE P_OK AS
  PROCEDURE hello;
END P_OK;
/
CREATE OR REPLACE PACKAGE BODY P_OK AS
  PROCEDURE hello IS BEGIN NULL; END;
END P_OK;
/

SELECT COUNT(*) FROM user_tables;       -- > 0
SELECT COUNT(*) FROM user_views;        -- > 0
SELECT COUNT(*) FROM user_objects;      -- > 0
